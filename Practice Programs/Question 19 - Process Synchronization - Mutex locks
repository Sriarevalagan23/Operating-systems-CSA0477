#include <stdio.h>
#include <pthread.h>

#define NUM_THREADS 5

int counter = 0;

pthread_mutex_t lock;

void *increment_counter(void *arg) {
    pthread_mutex_lock(&lock);  // Acquire the lock
    
    int temp = counter;
    temp++;
    counter = temp;

    printf("Counter: %d\n", counter);

    pthread_mutex_unlock(&lock);  // Release the lock
    return NULL;
}

int main() {
    pthread_t threads[NUM_THREADS];

    pthread_mutex_init(&lock, NULL);

    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_create(&threads[i], NULL, increment_counter, NULL);
    }

    for (int i = 0; i < NUM_THREADS; i++) {
        pthread_join(threads[i], NULL);
    }

    pthread_mutex_destroy(&lock);

    return 0;
}
