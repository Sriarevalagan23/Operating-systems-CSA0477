#include <stdio.h>

#define MAX_BLOCKS 5
#define MAX_FILE_SIZE 5

typedef struct {
    int blockNumber;
    char data[50];
} FileBlock;

typedef struct {
    int blockPointers[MAX_FILE_SIZE]; // Index block, stores pointers to data blocks
} IndexBlock;

void write_file(FileBlock file[], IndexBlock *indexBlock) {
    // Predefined data for file blocks
    char *predefined_data[MAX_FILE_SIZE] = {
        "Data for Block 1",
        "Data for Block 2",
        "Data for Block 3",
        "Data for Block 4",
        "Data for Block 5"
    };
    
    for (int i = 0; i < MAX_FILE_SIZE; i++) {
        file[i].blockNumber = i + 1;  // Assigning block number
        snprintf(file[i].data, sizeof(file[i].data), "%s", predefined_data[i]);
        indexBlock->blockPointers[i] = i;  // Point to the respective block
    }
}

void read_file(FileBlock file[], IndexBlock indexBlock) {
    printf("\nReading File Blocks:\n");
    for (int i = 0; i < MAX_FILE_SIZE; i++) {
        int blockIndex = indexBlock.blockPointers[i]; // Get the pointer to the block
        printf("Block %d: %s\n", file[blockIndex].blockNumber, file[blockIndex].data);
    }
}

int main() {
    FileBlock file[MAX_BLOCKS];
    IndexBlock indexBlock = {{-1, -1, -1, -1, -1}};  // Initialize with invalid pointers

    // Simulate writing predefined data to the file
    write_file(file, &indexBlock);

    // Display the menu and simulate file reading operations
    int choice;
    do {
        printf("\n1. Display all blocks\n2. Read file blocks\n3. Exit\nChoice: ");
        scanf("%d", &choice);
        getchar();  // To consume the newline character after scanf

        switch(choice) {
            case 1: 
                printf("\nFile Blocks:\n");
                for (int i = 0; i < MAX_FILE_SIZE; i++) {
                    printf("Block %d: %s\n", file[i].blockNumber, file[i].data);
                }
                break;
            case 2:
                read_file(file, indexBlock);
                break;
            case 3:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Try again.\n");
        }
    } while(choice != 3);

    return 0;
}
