#include <stdio.h>
#include <pthread.h>
#include <stdlib.h>

void* thread_function(void* arg) {
    printf("Thread started, argument value: %d\n", *(int*)arg);
    pthread_exit(NULL);  // Thread exit
}

int main() {
    pthread_t thread1, thread2;
    int arg1 = 1, arg2 = 2;
    
    // 1. Create threads
    if (pthread_create(&thread1, NULL, thread_function, &arg1) != 0) {
        perror("Thread creation failed");
        return 1;
    }
    
    if (pthread_create(&thread2, NULL, thread_function, &arg2) != 0) {
        perror("Thread creation failed");
        return 1;
    }

    // 2. Join threads
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);
    
    // 3. Check if threads are equal
    if (pthread_equal(thread1, thread2)) {
        printf("The threads are the same.\n");
    } else {
        printf("The threads are different.\n");
    }
    
    // 4. Thread exit is already handled in the thread function using pthread_exit
    pthread_exit(NULL);  // Ensure the main thread doesn't exit prematurely

    return 0;
}
