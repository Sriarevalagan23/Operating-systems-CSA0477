#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>

int main() {
    // Demonstrate fcntl system call for file descriptor manipulation
    int fd = open("example.txt", O_CREAT | O_WRONLY | O_TRUNC, S_IRUSR | S_IWUSR);
    if (fd == -1) {
        perror("Error creating file");
        return 1;
    }

    // Set file descriptor flags using fcntl
    int flags = fcntl(fd, F_GETFL);
    if (flags == -1) {
        perror("Error getting file flags");
        close(fd);
        return 1;
    }
    printf("File descriptor flags: %d\n", flags);

    // Demonstrate lseek (seek) system call for moving file pointer
    if (lseek(fd, 100, SEEK_SET) == -1) {
        perror("Error seeking in file");
        close(fd);
        return 1;
    }
    printf("File pointer moved to position 100 in the file.\n");

    // Write to file after seeking
    char *text = "Hello, world!";
    ssize_t bytes_written = write(fd, text, strlen(text));
    if (bytes_written == -1) {
        perror("Error writing to file");
        close(fd);
        return 1;
    }
    printf("Written to file: %zd bytes\n", bytes_written);

    // Close the file descriptor
    close(fd);

    // Demonstrate stat system call to get file details
    struct stat file_stat;
    if (stat("example.txt", &file_stat) == -1) {
        perror("Error getting file status");
        return 1;
    }
    printf("\nFile Information:\n");
    printf("File Size: %ld bytes\n", file_stat.st_size);
    printf("File Permissions: %o\n", file_stat.st_mode & 0777);
    printf("Last Access Time: %ld\n", file_stat.st_atime);

    // Demonstrate opendir and readdir system calls to list files in a directory
    DIR *dir = opendir(".");
    if (dir == NULL) {
        perror("Error opening directory");
        return 1;
    }

    printf("\nFiles in the current directory:\n");
    struct dirent *entry;
    while ((entry = readdir(dir)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    // Close the directory
    closedir(dir);

    return 0;
}
